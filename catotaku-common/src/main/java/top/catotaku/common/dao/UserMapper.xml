<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.catotaku.common.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="top.catotaku.common.pojo.po.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="createDate" property="createdate" jdbcType="TIMESTAMP" />
    <result column="craeteIp" property="craeteip" jdbcType="VARCHAR" />
    <result column="loginDate" property="logindate" jdbcType="TIMESTAMP" />
    <result column="loginIp" property="loginip" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="storeStatus" property="storestatus" jdbcType="INTEGER" />
    <result column="coin" property="coin" jdbcType="INTEGER" />
    <result column="ud_id" property="udId" jdbcType="INTEGER" />
    <result column="xx_id" property="xxId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, username, password, createDate, craeteIp, loginDate, loginIp, mobile, email, 
    status, storeStatus, coin, ud_id, xx_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="top.catotaku.common.pojo.po.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="top.catotaku.common.pojo.po.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.catotaku.common.pojo.po.User" >
    insert into user (id, username, password, 
      createDate, craeteIp, loginDate, 
      loginIp, mobile, email, 
      status, storeStatus, coin, 
      ud_id, xx_id)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{createdate,jdbcType=TIMESTAMP}, #{craeteip,jdbcType=VARCHAR}, #{logindate,jdbcType=TIMESTAMP}, 
      #{loginip,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{storestatus,jdbcType=INTEGER}, #{coin,jdbcType=INTEGER}, 
      #{udId,jdbcType=INTEGER}, #{xxId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="top.catotaku.common.pojo.po.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="createdate != null" >
        createDate,
      </if>
      <if test="craeteip != null" >
        craeteIp,
      </if>
      <if test="logindate != null" >
        loginDate,
      </if>
      <if test="loginip != null" >
        loginIp,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="storestatus != null" >
        storeStatus,
      </if>
      <if test="coin != null" >
        coin,
      </if>
      <if test="udId != null" >
        ud_id,
      </if>
      <if test="xxId != null" >
        xx_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="craeteip != null" >
        #{craeteip,jdbcType=VARCHAR},
      </if>
      <if test="logindate != null" >
        #{logindate,jdbcType=TIMESTAMP},
      </if>
      <if test="loginip != null" >
        #{loginip,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="storestatus != null" >
        #{storestatus,jdbcType=INTEGER},
      </if>
      <if test="coin != null" >
        #{coin,jdbcType=INTEGER},
      </if>
      <if test="udId != null" >
        #{udId,jdbcType=INTEGER},
      </if>
      <if test="xxId != null" >
        #{xxId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.catotaku.common.pojo.po.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.createdate != null" >
        createDate = #{record.createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.craeteip != null" >
        craeteIp = #{record.craeteip,jdbcType=VARCHAR},
      </if>
      <if test="record.logindate != null" >
        loginDate = #{record.logindate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginip != null" >
        loginIp = #{record.loginip,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.storestatus != null" >
        storeStatus = #{record.storestatus,jdbcType=INTEGER},
      </if>
      <if test="record.coin != null" >
        coin = #{record.coin,jdbcType=INTEGER},
      </if>
      <if test="record.udId != null" >
        ud_id = #{record.udId,jdbcType=INTEGER},
      </if>
      <if test="record.xxId != null" >
        xx_id = #{record.xxId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      createDate = #{record.createdate,jdbcType=TIMESTAMP},
      craeteIp = #{record.craeteip,jdbcType=VARCHAR},
      loginDate = #{record.logindate,jdbcType=TIMESTAMP},
      loginIp = #{record.loginip,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      storeStatus = #{record.storestatus,jdbcType=INTEGER},
      coin = #{record.coin,jdbcType=INTEGER},
      ud_id = #{record.udId,jdbcType=INTEGER},
      xx_id = #{record.xxId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.catotaku.common.pojo.po.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        createDate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="craeteip != null" >
        craeteIp = #{craeteip,jdbcType=VARCHAR},
      </if>
      <if test="logindate != null" >
        loginDate = #{logindate,jdbcType=TIMESTAMP},
      </if>
      <if test="loginip != null" >
        loginIp = #{loginip,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="storestatus != null" >
        storeStatus = #{storestatus,jdbcType=INTEGER},
      </if>
      <if test="coin != null" >
        coin = #{coin,jdbcType=INTEGER},
      </if>
      <if test="udId != null" >
        ud_id = #{udId,jdbcType=INTEGER},
      </if>
      <if test="xxId != null" >
        xx_id = #{xxId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.catotaku.common.pojo.po.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      createDate = #{createdate,jdbcType=TIMESTAMP},
      craeteIp = #{craeteip,jdbcType=VARCHAR},
      loginDate = #{logindate,jdbcType=TIMESTAMP},
      loginIp = #{loginip,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      storeStatus = #{storestatus,jdbcType=INTEGER},
      coin = #{coin,jdbcType=INTEGER},
      ud_id = #{udId,jdbcType=INTEGER},
      xx_id = #{xxId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>